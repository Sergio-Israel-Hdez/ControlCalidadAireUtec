@using Google.Apis.Sheets.v4;
@using Google.Apis.Services;
@using ControlCalidadAireUtec.Models;

@model ControlCalidadAireUtec.Models.BD.Sheets

@{
    /**/

    ViewBag.Title = "Detalle";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Detalle de los datos de la estación @Html.DisplayFor(model => model.nombre)</h2>


@{
    try
    {
        //optenemos los datos de google sheets

        string[] Scopes = { SheetsService.Scope.SpreadsheetsReadonly };
        string AplicationName = "Google Sheets API .NET Quickstart";
        string spredsheetId = Model.s_key;
        var service = new SheetsService(new BaseClientService.Initializer()
        {
            ApplicationName = AplicationName,
            ApiKey = "AIzaSyCUhw_JcXMHOYVKEIGd4NWQlTZChLZBLA8",
        });
        var range = $"datalogger!A4:E";
        SpreadsheetsResource.ValuesResource.GetRequest request =
            service.Spreadsheets.Values.Get(spredsheetId, range);
        var response = request.Execute();
        IList<IList<Object>> values = response.Values;
        if (values != null)
        {
            //listado para grafica - por el momento lo mostramos en una tabla
            ViewBag.censor = values.Select(x => new CensoresModel() { id = x[0].ToString(), fecha = x[1].ToString(), pm_2_5 = x[2].ToString(), pm_10 = x[3].ToString(), temp = x[4].ToString() }).OrderByDescending(x => x.id.Length).ThenByDescending(x => x.id).Take(10);
            //listado para el mapa
            ViewBag.censorDataMap = values.Select(x => new CensoresModel() { id = x[0].ToString(), fecha = x[1].ToString(), pm_2_5 = x[2].ToString(), pm_10 = x[3].ToString(), temp = x[4].ToString() }).OrderByDescending(x => x.id.Length).ThenByDescending(x => x.id).Take(1);
        }
    }
    catch (Exception ex)
    {

        <spam>@ex</spam>
    }
}
<div class="text-center">
    <div id="mapid" style="width: 100%;height: 300px;"></div>
    <script type="text/javascript">

    //tomamos la latitud y longitud del modelo

	var mymap = L.map('mapid').setView([@Model.latitud,@Model.longitud], 15);
    L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {
    maxZoom: 18,

    id: 'mapbox/streets-v11',
    tileSize: 512,
    zoomOffset: -1
        }).addTo(mymap);

    @{
        //desconponemos los datos para moder colocarlo en el codigo del mapa
        if (ViewBag.censorDataMap!=null)
        {
            foreach (var item in ViewBag.censorDataMap)
            {
                ViewBag.fechaCensor = item.fecha;
                ViewBag.pm_2_5Censor = item.pm_2_5;
                ViewBag.pm_10Censor = item.pm_10;
                ViewBag.tempCensor = item.temp;
            }
        }

}
        if (@ViewBag.pm_2_5Censor== 0 && @ViewBag.pm_2_5Censor==0) {
        L.circle([@Model.latitud, @Model.longitud], {
        color: 'blue',
        fillColor: 'blue',
        fillOpacity: 0.5,
        radius: 100
        }).addTo(mymap).bindPopup("<span class='alert alert-danger'>Estacion de monitoreo caida</span>");

        }
        if (@ViewBag.pm_2_5Censor> 0 && @ViewBag.pm_2_5Censor< 15.3) {
        L.circle([@Model.latitud, @Model.longitud], {
        color: 'green',
        fillColor: '#24B300',
        fillOpacity: 0.5,
        radius: 100
        }).addTo(mymap).bindPopup("Calidad: Buena</br>PM 2.5: @ViewBag.pm_2_5Censor (ug/m3)</br>PM 10: @ViewBag.pm_10Censor (ug/m3)</br>Temperatura C°: @ViewBag.tempCensor</br>");

        }
        if (@ViewBag.pm_2_5Censor> 15.5 && @ViewBag.pm_2_5Censor< 40.2) {
        L.circle([@Model.latitud, @Model.longitud], {
        color: 'yellow',
        fillColor: '#FFCD00',
        fillOpacity: 0.5,
        radius: 100
        }).addTo(mymap).bindPopup("Calidad: Satifactoria</br>PM 2.5: @ViewBag.pm_2_5Censor (ug/m3)</br>PM 10: @ViewBag.pm_10Censor (ug/m3)</br>Temperatura C°: @ViewBag.tempCensor</br>");
        }
        if (@ViewBag.pm_2_5Censor> 45.5 && @ViewBag.pm_2_5Censor< 65.4) {
        L.circle([@Model.latitud, @Model.longitud], {
        color: 'orange',
        fillColor: '#FF4D00',
        fillOpacity: 0.5,
        radius: 100
        }).addTo(mymap).bindPopup("Calidad: No satifactoria</br>PM 2.5: @ViewBag.pm_2_5Censor (ug/m3)</br>PM 10: @ViewBag.pm_10Censor (ug/m3)</br>Temperatura C°: @ViewBag.tempCensor</br>");
        }
        if (@ViewBag.pm_2_5Censor> 66 && @ViewBag.pm_2_5Censor< 159) {
        L.circle([@Model.latitud, @Model.longitud], {
        color: 'red',
        fillColor: '#f03',
        fillOpacity: 0.5,
        radius: 100
        }).addTo(mymap).bindPopup("Calidad: Dañina</br>PM 2.5: @ViewBag.pm_2_5Censor</br>PM 10: @ViewBag.pm_10Censor (ug/m3)</br>Temperatura C°: @ViewBag.tempCensor</br>");
        }
    </script>
</div>
<div class="text-center">
    <h1>Grafico PM</h1>
    <img class="img-responsive" src='@Url.Action("GraficoPM", "Home",new { idsheet = Model.id })' alt="Grafico de Particulas" />
    <img class="img-responsive" src='@Url.Action("GraficoPM10", "Home",new { idsheet = Model.id })' alt="Grafico de Particulas" />
</div>
<hr />
<div>
    <div>
        <h1>Datos recientes</h1>
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">fecha</th>
                    <th scope="col">pm 2.5</th>
                    <th scope="col">pm 10</th>
                    <th scope="col">Temp C°</th>
                    <th scope="col">Calidad</th>
                </tr>
            </thead>
            <tbody>

                @{
                    foreach (var item in ViewBag.censor)
                    {
                        <tr>
                            <th scope="row">@item.id</th>
                            <td>@item.fecha</td>
                            <td>@item.pm_2_5</td>
                            <td>@item.pm_10</td>
                            <td>@item.temp</td>
                            <td>
                                @{
                                    int pm_2_5;
                                    System.Int32.TryParse(item.pm_2_5, out pm_2_5);
                                    if (pm_2_5 > 0 && pm_2_5 < 15.3)
                                    {
                                        <p>Buena</p>
                                    }
                                    if (pm_2_5 > 15.5 && pm_2_5 < 40.2)
                                    {
                                        <p>Satifactoria</p>
                                    }
                                    if (pm_2_5 > 45.5 && pm_2_5 < 65.4)
                                    {
                                        <p>No satifactoria</p>
                                    }
                                    if (pm_2_5 > 66 && pm_2_5 < 159)
                                    {
                                        <p>Dañina</p>
                                    }
                            }
                        </td>
                    </tr>
                }
                }
            </tbody>
        </table>
    </div>
</div>
<a href="http://docs.google.com/spreadsheets/d/@Model.s_key" class="btn btn-primary" target="_blank">Ver registro historico</a>
<hr />

<div class="text-center">
    <h1>Grafico Temperatura</h1>
    <img class="img-responsive" src='@Url.Action("GraficoTemp", "Home",new { idsheet = Model.id })' alt="Grafico de Particulas" />
</div>
<hr />
<div class="text-center">
    <img src="~/Content/Images/thumbnail.png" />
</div>
<p>
    @Html.ActionLink("Regresar", "Index")
</p>
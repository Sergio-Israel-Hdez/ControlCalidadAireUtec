@model ControlCalidadAireUtec.Models.BD.Sheets

@{
    ViewBag.Title = "Agregar Google Sheet";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Agregar</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Estación de Monitoreo</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Mapa</label>
            <div class="col-md-10">
                <div id="mapid" style="width: 80%;height: 300px;">
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.latitud, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.latitud, new { htmlAttributes = new { @class = "form-control", @id = "lat", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.latitud, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.longitud, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.longitud, new { htmlAttributes = new { @class = "form-control", @id = "lng", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.longitud, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.s_key, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.s_key, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.s_key, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script type="text/javascript">
    /**/
    var mymap = L.map('mapid').setView([13.49647, -88.90137], 8);
    /**/
    L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {
        maxZoom: 18,
        id: 'mapbox/streets-v11',
        tileSize: 512,
        zoomOffset: -1
    }).addTo(mymap);
    var marcador;
    mymap.on('click',
        function (e) {
            if (marcador) {
                mymap.removeLayer(marcador)
            }
            var coord = e.latlng.toString().split(',');
            var lat = coord[0].split('(');
            var lng = coord[1].split(')');

            console.log("You clicked the map at latitude: " + lat[1] + " and longitude:" + lng[0]);
            $("#lat").val(lat[1])
            $("#lng").val(lng[0])

            marcador = new L.circle([lat[1], lng[0]], {
                color: 'green',
                fillColor: '#24B300',
                fillOpacity: 0.5,
                radius: 100
            }).addTo(mymap).bindPopup("Ubicación Seleccionada");
        }
    );
</script>